---
title: "OtterDoc"
format: html
editor: visual
---

Downloading the data!

```{r}
#Libraries:
library(tidyverse)
library(dplyr)
library(ggplot2)
library(lme4)
library(cowplot)
library(car)
library(ggeffects)
library(lubridate)

otterdat <- read_csv(here::here("data/mompupdata_all.xlsx - Sheet1.csv"))
momdat <- read_csv(here::here("data/mombday.csv"))

names(momdat)[names(momdat) == "Brthdate_est"] <- "mombday"
names(otterdat)[names(otterdat) == "Brthdate_est"] <- "pupbday"
names(momdat)[names(momdat) == "OTTERNO"] <- "Otterno"
```

Now that we have our datasets somewhat organized... I need to join them as well find accurate agecert values for the females..

Here, we will assign an estimated age using agecert while allowing some randomness

```{r}
#First change the birthdate year to a correct year form
momdat <- momdat %>%
  mutate(
    mombday = mdy(mombday)
  )

#Now bring the columns from momdat to otterdat
otterdat <- otterdat %>%
  left_join(momdat %>% 
              select(Otterno, mombday, AGECERT_mom),
            by = "Otterno")

#Now we can assign an age to mom's at time of pup's birth using
otterdat <- otterdat %>%
  mutate(
    mom_age = as.integer(interval(mombday, pupbday) / years(1))
  )


#Trying to get a better age estimate using agecert
otterdat <- otterdat %>%
  mutate(
    mom_age_estimated = case_when(
      AGECERT_mom == 4 ~ paste0(mom_age - 1, "-", mom_age + 1),
      AGECERT_mom == 5 ~ paste0(mom_age - 2, "-", mom_age + 2),
      AGECERT_mom == 6 ~ "adult (unknown age)",
      TRUE ~ NA_character_
    )
  )

#This just makes it all more confusing... 
```

So.. We an assigned age for mom's that really isn't helpful at all and we have our data all organized into otterdat now..

While it isn't really accurate.. we can try to use the estimated ages without age_cert to see what happens

Our first quick analysis on the correlation of how weaning success varies with mom's age

```{r}
otterdat %>%
  group_by(mom_age) %>%
  summarize(
    wean_success_rate = mean(Wean_success == TRUE, na.rm = TRUE),
    pup_survival_rate = mean(Mortality == FALSE, na.rm = TRUE),
    n = n()
  ) %>%
  arrange(mom_age)

#Looks like there is definitely a clear case of older mom's have higher rates of pup survival and weaning:

ggplot(otterdat, aes(x = mom_age, fill = Wean_success)) +
  geom_bar(position = "fill") +
  labs(title = "Weaning Success by Mom's Age", y = "Proportion", x = "Mom's Age at Pup Birth") +
  scale_fill_manual(values = c("TRUE" = "green", "FALSE" = "red"))

```

So with that quick analysis.. maybe there is some correlation

Although I'm still not completely believing it.. so maybe what we do now is create a GLMM model for this

```{r}
#First I know I want random effect of year and individual so let's create a column for year
otterdat <- otterdat %>%
  mutate(year = year(pupbday))

#Then in order to measure wean sucess we want to turn Wean_success to an integer
otterdat <- otterdat %>%
  mutate(
    Wean_success = as.integer(Wean_success == TRUE)
  )

#Now we can build the model using a logistic regression mixed model:

otter_mod <- glmer(Wean_success ~ mom_age + (1 | Otterno) + (1 | year),
                     data = otterdat,
                     family = binomial,
                     control = glmerControl(optimizer = "bobyqa"))

summary(otter_mod)
```

Right away... look's like there's no significance however detecting significance between individuals ages is hard to do.. so let's try to add some new variables to express our findings!

First we can group Mom Age into age classes and turn pup sex into a factor

```{r}
otterdat2 <- otterdat %>%
  mutate(
    # Mom age group
    mom_age_group = case_when(
      mom_age < 4 ~ "young",
      mom_age >= 4 & mom_age <= 8 ~ "prime",
      mom_age > 8 ~ "old",
      TRUE ~ NA_character_
    ),
    mom_age_group = factor(mom_age_group, levels = c("young", "prime", "old")),

    # Pup sex (factor)
    SEX = factor(SEX, levels = c("m", "f", "u")),

    # Binary outcome for weaning success
    wean_success = as.integer(Wean_success == TRUE),

    # Binary outcome for pup sex (for model 2)
    sex_bin = ifelse(SEX == "m", 1, 0)
  ) %>%
   filter(!is.na(mom_age_group), !is.na(SEX), !is.na(wean_success), !is.na(mom_age), !is.na(pupbday))

otterdat2 <- otterdat2 %>%
  mutate(
    pupbday   = if (!inherits(pupbday, "Date")) as.Date(pupbday) else pupbday,
    last_date = if (!inherits(Last_date, "Date")) as.Date(Last_date) else Last_date,
    wean_days = as.numeric(Last_date - pupbday, units = "days"),
    mom_age_group = case_when(
      mom_age < 4 ~ "young",
      mom_age >= 4 & mom_age <= 8 ~ "prime",
      mom_age > 8 ~ "old",
      TRUE ~ NA_character_
    ),
    mom_age_group = factor(mom_age_group, levels = c("young", "prime", "old"))
  ) %>%
  filter(!is.na(wean_days), wean_days >= 0, wean_days <= 365)
```

Now that our data is all organized we can create our models

For our first question: Does mom's age group/class affect weaning success?

```{r}
# Model
age_mod <- glmer(
  wean_success ~ mom_age + mom_age_group + (1 | Otterno) + (1 | year),
  data = otterdat2,
  family = binomial,
  control = glmerControl(optimizer = "bobyqa")
)

summary(age_mod)

# Build prediction grid across full age range
wean_grid <- expand_grid(
  mom_age = seq(min(otterdat2$mom_age, na.rm = TRUE),
                max(otterdat2$mom_age, na.rm = TRUE),
                by = 1)
) %>%
  mutate(
    mom_age_group = case_when(
      mom_age < 4 ~ "young",
      mom_age >= 4 & mom_age <= 8 ~ "prime",
      mom_age > 8 ~ "old",
      TRUE ~ NA_character_
    ),
    mom_age_group = factor(mom_age_group, levels = c("young", "prime", "old"))
  )

# Predictions with CI
wean_pred_ci <- ggpredict(age_mod, terms = c("mom_age [all]", "mom_age_group")) %>%
  as.data.frame() %>%
  mutate(
    mom_age_group = factor(group, levels = c("young", "prime", "old")),
    mom_age = as.numeric(x)
  ) %>%
  # Restrict predictions to valid ranges
  filter(
    (mom_age_group == "young" & mom_age < 4) |
    (mom_age_group == "prime" & mom_age >= 4 & mom_age <= 8) |
    (mom_age_group == "old" & mom_age > 8)
  )

# Observed summaries
wean_summ <- otterdat2 %>%
  group_by(mom_age, mom_age_group) %>%
  summarise(
    mean_success = mean(wean_success, na.rm = TRUE),
    se_success = sd(wean_success, na.rm = TRUE) / sqrt(n()),
    .groups = "drop"
  ) %>%
  mutate(mom_age = mom_age + 0.2 * ifelse(mom_age_group == "prime",
                                          0, ifelse(mom_age_group == "young", -1, 1)))

# Plot with ribbons and thresholds
wean_fig <- ggplot() +
  # Observed data points
  geom_pointrange(
    data = wean_summ,
    aes(
      x = mom_age,
      y = mean_success,
      ymin = mean_success - 1.96 * se_success,
      ymax = mean_success + 1.96 * se_success,
      color = mom_age_group,
      shape = mom_age_group
    ),
    show.legend = TRUE
  ) +
  # Confidence ribbons
  geom_ribbon(
    data = wean_pred_ci,
    aes(x = mom_age, ymin = conf.low, ymax = conf.high, fill = mom_age_group),
    alpha = 0.2
  ) +
  # Prediction lines
  geom_line(
    data = wean_pred_ci,
    aes(x = mom_age, y = predicted, color = mom_age_group, linetype = mom_age_group),
    linewidth = 1.2
  ) +
  # Vertical dashed lines for thresholds
  geom_vline(xintercept = 4, linetype = "dashed", color = "#9B59B6") +
  geom_vline(xintercept = 8, linetype = "dashed", color = "#9B59B6") +
  theme_minimal() +
  labs(
    title = "Weaning Success vs Mom Age",
    x = "Mother's Age (Years)",
    y = "Predicted Probability of Weaning Success",
    color = "Age Group",
    fill = "Age Group",
    linetype = "Age Group",
    shape = "Age Group"
  ) +
  scale_color_manual(values = c("young" = "#D5A6F6", "prime" = "#6DD5B3", "old" = "#8E44AD")) +
  scale_fill_manual(values = c("young" = "#D5A6F6", "prime" = "#6DD5B3", "old" = "#8E44AD"))

print(wean_fig)
```

Now for Question 2:

How Does Mom's age impact \# of male pups produced:

```{r}
# Model
sex_mod <- glmer(
  sex_bin ~ mom_age + mom_age_group + (1 | Otterno) + (1 | year),
  data = otterdat2,
  family = binomial,
  control = glmerControl(optimizer = "bobyqa")
)

summary(sex_mod)

# Prediction grid across full mom_age range
sex_grid <- expand_grid(
  mom_age = seq(min(otterdat2$mom_age, na.rm = TRUE),
                max(otterdat2$mom_age, na.rm = TRUE),
                by = 0.1)
) %>%
  mutate(
    mom_age_group = case_when(
      mom_age < 4 ~ "young",
      mom_age >= 4 & mom_age <= 8 ~ "prime",
      mom_age > 8 ~ "old",
      TRUE ~ NA_character_
    ),
    mom_age_group = factor(mom_age_group, levels = c("young", "prime", "old"))
  )

# Predictions with CI
sex_pred_ci <- ggpredict(sex_mod, terms = c("mom_age [all]", "mom_age_group")) %>%
  as.data.frame() %>%
  mutate(
    mom_age_group = factor(group, levels = c("young", "prime", "old")),
    mom_age = as.numeric(x)
  ) %>%
  # Restrict predictions to valid ranges
  filter(
    (mom_age_group == "young" & mom_age < 4) |
    (mom_age_group == "prime" & mom_age >= 4 & mom_age <= 8) |
    (mom_age_group == "old" & mom_age > 8)
  )

# Observed summaries
sex_summ <- otterdat2 %>%
  group_by(mom_age, mom_age_group) %>%
  summarise(
    mean_male = mean(sex_bin, na.rm = TRUE),
    se_male = sd(sex_bin, na.rm = TRUE) / sqrt(n()),
    .groups = "drop"
  ) %>%
  # offset slightly by group for visibility
  mutate(mom_age = mom_age + 0.2 * ifelse(mom_age_group == "prime",
                                          0, ifelse(mom_age_group == "young", -1, 1)))

# Plot with ribbons + thresholds
sex_fig <- ggplot() +
  # Observed data points
  geom_pointrange(
    data = sex_summ,
    aes(
      x = mom_age,
      y = mean_male,
      ymin = mean_male - 1.96 * se_male,
      ymax = mean_male + 1.96 * se_male,
      color = mom_age_group,
      shape = mom_age_group
    ),
    show.legend = TRUE
  ) +
  # Confidence ribbons
  geom_ribbon(
    data = sex_pred_ci,
    aes(x = mom_age, ymin = conf.low, ymax = conf.high, fill = mom_age_group),
    alpha = 0.2
  ) +
  # Prediction lines
  geom_line(
    data = sex_pred_ci,
    aes(x = mom_age, y = predicted, color = mom_age_group, linetype = mom_age_group),
    linewidth = 1.2
  ) +
  # Threshold cutoffs
  geom_vline(xintercept = 3.8, linetype = "dashed", color = "#9B59B6") +
  geom_vline(xintercept = 8.2, linetype = "dashed", color = "#9B59B6") +
  theme_minimal() +
  labs(
    title = "Probability of Producing Male Pups",
    x = "Mother's Age (Years)",
    y = "Predicted Probability (Male Pup)",
    color = "Age Group",
    fill = "Age Group",
    linetype = "Age Group",
    shape = "Age Group"
  ) +
  scale_color_manual(values = c("young" = "#D5A6F6", "prime" = "#6DD5B3", "old" = "#8E44AD")) +
  scale_fill_manual(values = c("young" = "#D5A6F6", "prime" = "#6DD5B3", "old" = "#8E44AD"))

print(sex_fig)
```

Now our final question:

How does weaning period change with mom's age

```{r}
otterdat2 <- otterdat2 %>%
  mutate(wean_days = as.numeric(Last_date - pupbday))

# 1) Model with glmer (Poisson, count data)
wean_days_mod <- glmer.nb(
  wean_days ~ mom_age + mom_age_group + (1 | Otterno) + (1 | year),
  data = otterdat2,
  control = glmerControl(optimizer = "bobyqa")
)

# 2) Prediction grid
wean_days_grid <- tidyr::expand_grid(
  mom_age = seq(min(otterdat2$mom_age, na.rm = TRUE),
                max(otterdat2$mom_age, na.rm = TRUE),
                by = 1)
) %>%
  mutate(
    mom_age_group = case_when(
      mom_age < 4 ~ "young",
      mom_age >= 4 & mom_age <= 8 ~ "prime",
      mom_age > 8 ~ "old",
      TRUE ~ NA_character_
    ),
    mom_age_group = factor(mom_age_group, levels = c("young", "prime", "old"))
  )

# 3) Predictions with 95% CI (back-transformed to days)
wean_days_pred_ci <- ggpredict(
  wean_days_mod,
  terms = c("mom_age [all]", "mom_age_group")
) %>%
  as.data.frame() %>%
  mutate(
    mom_age_group = factor(group, levels = c("young", "prime", "old")),
    mom_age = as.numeric(x)
  ) %>%
  filter(
    (mom_age_group == "young" & mom_age < 4) |
    (mom_age_group == "prime" & mom_age >= 4 & mom_age <= 8) |
    (mom_age_group == "old" & mom_age > 8)
  )

# 4) Observed summaries
wean_days_summ <- otterdat2 %>%
  group_by(mom_age, mom_age_group) %>%
  summarise(
    mean_days = mean(wean_days, na.rm = TRUE),
    se_days   = sd(wean_days, na.rm = TRUE) / sqrt(n()),
    .groups = "drop"
  ) %>%
  mutate(mom_age = mom_age + 0.2 * ifelse(mom_age_group == "prime", 0,
                                   ifelse(mom_age_group == "young", -1, 1)))

# 5) Plot
wean_days_fig <- ggplot() +
  geom_pointrange(
    data = wean_days_summ,
    aes(x = mom_age, y = mean_days,
        ymin = mean_days - 1.96 * se_days,
        ymax = mean_days + 1.96 * se_days,
        color = mom_age_group, shape = mom_age_group),
    linewidth = 0.4
  ) +
  geom_ribbon(
    data = wean_days_pred_ci,
    aes(x = mom_age, ymin = conf.low, ymax = conf.high, fill = mom_age_group),
    alpha = 0.2
  ) +
  geom_line(
    data = wean_days_pred_ci,
    aes(x = mom_age, y = predicted, color = mom_age_group, linetype = mom_age_group),
    linewidth = 1.2
  ) +
  geom_vline(xintercept = 4, linetype = "dashed", color = "#9B59B6") +
  geom_vline(xintercept = 8, linetype = "dashed", color = "#9B59B6") +
  theme_minimal(base_size = 12) +
  labs(
    title = "Weaning Duration vs. Mother's Age (Sea Otters)",
    subtitle = "Predicted weaning days from glmer (Poisson)",
    x = "Mother's Age (years)",
    y = "Weaning period (days)",
    color = "Age group", fill = "Age group", linetype = "Age group", shape = "Age group"
  ) +
  scale_color_manual(values = c(young = "#D5A6F6", prime = "#6DD5B3", old = "#8E44AD")) +
  scale_fill_manual(values  = c(young = "#D5A6F6", prime = "#6DD5B3", old = "#8E44AD"))

print(wean_days_fig)
```
